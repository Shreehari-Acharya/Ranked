// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum REGISTRATION_TYPE {
  EMAIL
  GOOGLE
}

model User {
  id                           String             @id @default(uuid())
  email                        String             @unique
  username                     String             @unique
  passwordHash                 String?
  createdAt                    DateTime           @default(now())
  registrationType             REGISTRATION_TYPE
  emailVerified                Boolean            @default(false)
  emailVerificationToken       String?
  emailVerificationTokenExpiry DateTime?
  matchParticipants            MatchParticipant[]
  matchesWon                   Match[]            
  rating                       Int?
}

model Match {
  id           String             @id @default(uuid())
  participants MatchParticipant[]
  winnerId     String?
  winner       User?              @relation(fields: [winnerId], references: [id], onDelete: SetNull)
  problem      Problem            @relation(fields: [problemId], references: [id])
  problemId    String
  playedAt     DateTime           @default(now())
}

model MatchParticipant {
  id      String @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  match   Match  @relation(fields: [matchId], references: [id], onDelete: Cascade)
  matchId String
}

model Problem {
  id          String   @id @default(uuid())
  slug        String   @unique // slug will be used to identify problem from the 'problems' folder
  description String           // The description will be a large string of markdown 
  codeSnippet String           
  createdAt   DateTime @default(now())
  Match       Match[]
}
